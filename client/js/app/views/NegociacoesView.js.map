{"version":3,"sources":["../../app-es6/views/NegociacoesView.js"],"names":["NegociacoesView","elemento","model","negociacoes","map","DateHelper","dataParaTexto","n","data","quantidade","valor","volume","join","volumeTotal","View"],"mappings":";;;;;;;;;;AAAA;;;IAKMA,e;;;AAEF,6BAAYC,QAAZ,EAAsB;AAAA;;AAAA,iIACXA,QADW;AAErB;;;;iCAEQC,K,EAAO;AACZ,mkBAYUA,MAAMC,WAAN,CAAkBC,GAAlB,CAAuB;AAAA,uBAAK;AAAL,yFAGPC,WAAWC,aAAX,CAAyBC,EAAEC,IAA3B,CAHO,+CAIPD,EAAEE,UAJK,+CAKPF,EAAEG,KALK,+CAMPH,EAAEI,MANK;AAAA;AAAA,aAAvB,EASKC,IATL,CASU,EATV,CAZV,iLA2BeV,MAAMW,WA3BrB;AAgCH;;;;EAvCyBC,I;;AAiD9B","file":"NegociacoesView.js","sourcesContent":["// NegociacoesView.js\r\n\r\n\r\n\r\n\r\nclass NegociacoesView extends View {\r\n\r\n    constructor(elemento) {\r\n        super (elemento);\r\n    }\r\n\r\n    template(model) {\r\n        return `\r\n        <table class=\"table table-hover table-bordered\">\r\n            <thead>\r\n                <tr>\r\n                    <th onclick = \"negociacaoController.ordena('data')\"> DATA </th>\r\n                    <th onclick = \"negociacaoController.ordena('quantidade')\"> QUANTIDADE </th>\r\n                    <th onclick = \"negociacaoController.ordena('valor')\"> VALOR </th>\r\n                    <th onclick = \"negociacaoController.ordena('volume')\"> VOLUME </th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                ${model.negociacoes.map( n => // 'n' = negociação - Elementos da lista.\r\n                    `\r\n                        <tr>\r\n                            <td>${DateHelper.dataParaTexto(n.data)}</td>\r\n                            <td>${n.quantidade}</td>\r\n                            <td>${n.valor}</td>\r\n                            <td>${n.volume}</td>\r\n                        </tr>\r\n\r\n                    `).join(\"\")}\r\n            </tbody>\r\n\r\n            <tfoot>\r\n                <td colspan=\"3\" style=\"text-align:right\"><b>Total</b></td>\r\n                <td>\r\n                    ${ model.volumeTotal }\r\n                </td>\r\n            </tfoot>\r\n        </table>\r\n        `;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n---------------------------------------------------------------------------------------------\r\n----------------------------------------------------------------------------------------------\r\n\r\n\r\n    # Anotações: \r\n\r\n    - O 'innerHTML' será responsável por converter as strings em elementos do DOM. Isto será inserido com filho da <div>.\r\n\r\n    - 'Join' = Concatena todos os dados do array e vira uma string.\r\n\r\n    - Por ser uma arrow function, pode retirar o 'return' e as chaves. \r\n\r\n    - Immediately-invoked function expression - \"IIFE\" -  ou a função imediata.\r\n\r\n    - NegociacoesView extends View === 'NegociacoesView' herda as propriedades do 'View', assim n precisa repetir código. \r\n \r\n\r\n---------------------------------------------------------------------------------------------\r\n----------------------------------------------------------------------------------------------\r\n */"]}