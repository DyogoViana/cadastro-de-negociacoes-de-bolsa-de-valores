{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","get","then","console","log","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","negociacao","ConnectionFactory","getConnection","NegociacaoDAO","connection","DAO","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["// NegoviacaoService.js\r\n\r\n\r\n\r\nimport { HttpService } from \"./HttpService\";\r\nimport { ConnectionFactory } from \"./ConnectionFactory\";\r\n\r\nimport { NegociacaoDAO } from \"../DAO/NegociacaoDAO\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\n\r\n\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n\r\n\r\n    // Obtêm as negociações da semana.\r\n    obterNegociacoesDaSemana() {\r\n        \r\n            return this._http\r\n             .get(\"negociacoes/semana\")\r\n             .then(negociacoes => {\r\n                console.log(negociacoes);\r\n                return negociacoes.map(objeto => new Negociacao(\r\n                    new Date(objeto.data), \r\n                    objeto.quantidade, \r\n                    objeto.valor\r\n                ));\r\n             })\r\n             .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"NÃO foi possivel obter as negociações da semana.\");\r\n             });\r\n    }\r\n\r\n    \r\n    // Obtêm as negociações da 'semana anterior'.\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        \r\n            return this._http\r\n             .get(\"negociacoes/anterior\")\r\n             .then(negociacoes => {\r\n\r\n                console.log(negociacoes);\r\n\r\n                return negociacoes.map(objeto => new Negociacao(\r\n                    new Date(objeto.data), \r\n                    objeto.quantidade, \r\n                    objeto.valor\r\n                ));\r\n             })\r\n             .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"NÃO foi possivel obeter as negociações da semana anterior.\");\r\n             });\r\n        }\r\n        \r\n        // Obtêm as negociações da 'semana Retrasada'.\r\n        obterNegociacoesDaSemanaRetrasada() {\r\n                \r\n            return this._http\r\n             .get(\"negociacoes/retrasada\")\r\n             .then(negociacoes => {\r\n                console.log(negociacoes);\r\n\r\n                return negociacoes.map(objeto => new Negociacao(\r\n                    new Date(objeto.data), \r\n                    objeto.quantidade, \r\n                    objeto.valor\r\n                ));\r\n             })\r\n             .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"NÃO foi possivel obter as negociações da semana retrasada.\");\r\n             });\r\n        }\r\n\r\n        // Fleta as negociações de uma forma linear e chamada na 'importaNegociacoes'.\r\n        obterNegociacoes() {\r\n\r\n            return Promise.all([  \r\n                this.obterNegociacoesDaSemana(),\r\n                this.obterNegociacoesDaSemanaAnterior(),\r\n                this.obterNegociacoesDaSemanaRetrasada()])\r\n             .then(periodos => {\r\n                let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo), []);\r\n                return negociacoes;\r\n})\r\n             .catch(erro => { \r\n                throw new Error(erro);\r\n            });\r\n        }\r\n\r\n        // cadastra uma nova negociação e adiciona no 'NegociacaoController'.\r\n        cadastra(negociacao) {\r\n\r\n            return ConnectionFactory\r\n             .getConnection()\r\n             .then(connection => new NegociacaoDAO(connection))\r\n             .then(DAO => DAO.adiciona(negociacao))\r\n             .then(() => \"Negociação adicionada com sucesso.\")\r\n\r\n             .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error(\"Não foi possível adicionar uma negociação.\")\r\n             });\r\n        }\r\n\r\n        lista() {\r\n\r\n            return ConnectionFactory\r\n             .getConnection()\r\n             .then(connection => new NegociacaoDAO(connection))\r\n             .then(DAO => DAO.listaTodos()) // Lista todos os dados di IndexedDB.\r\n\r\n             .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error(\"Não foi possível obter as negociações.\")\r\n             });\r\n        }\r\n\r\n        // Apaga uma lista de negociação.\r\n        apaga() {\r\n            \r\n            return ConnectionFactory\r\n             .getConnection()\r\n             .then(connection => new NegociacaoDAO  (connection))\r\n             .then(DAO => DAO.apagaTodos())\r\n             .then(() => \"Negociações apagadas com sucesso.\")\r\n\r\n             .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error(\"Não foi possível apagar as negociações.\");\r\n             });\r\n        }\r\n\r\n        // Importa negociações.\r\n        importa(listaAtual) {\r\n\r\n            return this.obterNegociacoes()\r\n             .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        negociacao.isEquals(negociacaoExistente))\r\n                )\r\n             )\r\n             .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error(\"Não foi possível importar as negociações.\");\r\n             });\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    \r\n/*\r\n---------------------------------------------------------------------------------------------\r\n----------------------------------------------------------------------------------------------\r\n\r\n\r\n    # Anotações:\r\n\r\n    - Endereços do servidor -- 'negociacoes/semana', 'negociacoes/anterior', 'negociacoes/retrasada'\r\n\r\n\r\n---------------------------------------------------------------------------------------------\r\n----------------------------------------------------------------------------------------------\r\n*/"]}