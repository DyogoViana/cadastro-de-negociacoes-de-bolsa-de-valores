{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","Negociacao","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_service","_iniciacaoAutomatica","lista","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","texto","setInterval","importaNegociacoes","coluna","_ordemAtual","inverteOrdem","ordena","a","b","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","apaga","esvaziaTabela","textoParaData","value","parseInt","parseFloat","focus","negociacaoController","currentInstance"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["// NegociacaoController.js\r\n\r\n\r\n\r\n\r\n// Importações dos Models.\r\nimport { ListaNegociacoes } from \"../models/ListaNegociacoes\";\r\nimport { Mensagem } from \"../models/Mensagem\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\n\r\n// Importações das Views.\r\nimport { NegociacoesView } from \"../views/NegociacoesView\";\r\nimport { MensagemView } from \"../views/MensagemView\";\r\n\r\n// Importação dos Services.\r\nimport { NegociacaoService } from \"../services/NegociacaoService\";\r\n\r\n// Importações dos Helpers.\r\nimport { DateHelper } from \"../helpers/DateHelper\";\r\nimport { Bind } from \"../helpers/Bind\";\r\n\r\n\r\n\r\nclass NegociacaoController {\r\n    \r\n    constructor() {\r\n\r\n        let $ = document.querySelector.bind(document);\r\n    \r\n        this._inputData = $(\"#data\");\r\n        this._inputQuantidade = $(\"#quantidade\");\r\n        this._inputValor = $(\"#valor\");\r\n\r\n        // Proxy para criação da trap no 'adiciona' e 'esvazia'.\r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(), // modelo\r\n            new NegociacoesView($(\"#negociacoesView\")), // view.\r\n            \"adiciona\", \"esvaziaTabela\", \"ordena\", \"inverteOrdem\"); // Condição para atualizar. Props que vão disparar a 'View'.\r\n\r\n        // Mensagem que aparece ao usuário.\r\n        this._mensagem = new Bind(\r\n            new Mensagem(), // modelo.\r\n            new MensagemView($(\"#mensagemView\")), // view.\r\n            \"texto\"); // Condição para atualizar. Props que vão disparar a 'View'.\r\n        \r\n        this._service = new NegociacaoService();\r\n        \r\n        this._iniciacaoAutomatica();        \r\n    }\r\n        \r\n\r\n    \r\n    _iniciacaoAutomatica() {\r\n        // Cria uma conexão e lista as negociações na view.\r\n        this._service\r\n         .lista()\r\n         .then(negociacoes =>\r\n             negociacoes.forEach(negociacao =>\r\n                 this._listaNegociacoes.adiciona(negociacao)))\r\n         .catch(erro => {\r\n             console.log(erro);\r\n             this._mensagem.texto = erro;\r\n         })\r\n        \r\n         setInterval(() => {\r\n            this.importaNegociacoes();\r\n        }, 3000); // Intervalos onde são importadas as impostações das negociações.\r\n    }\r\n\r\n    // Ordena a tabela. \r\n    ordena(coluna) {\r\n        if (this._ordemAtual == coluna) {\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else {\r\n            this._listaNegociacoes.ordena((a, b) => a[coluna] -b[coluna]);\r\n        }\r\n        this._ordemAtual = coluna;\r\n    }\r\n\r\n    // Adiciona uma nova lista de negociação.\r\n    adiciona(event) {\r\n        event.preventDefault();\r\n\r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n         .cadastra(negociacao)\r\n         .then(mensagem => {\r\n             this._listaNegociacoes.adiciona(negociacao);\r\n             this._mensagem.texto = mensagem;\r\n             console.log(\"Negociação adicionada com sucesso.\");\r\n             this._limpaFormulario();\r\n         })\r\n         .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    // Importando negociações via Ajax, com o padrão de projeto 'Promise'.\r\n    importaNegociacoes() {\r\n\r\n        this._service\r\n         .importa(this._listaNegociacoes.negociacoes)\r\n         .then(negociacoes =>\r\n            negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = \"Negociações do período importadas com sucesso.\";\r\n                console.log(\"Negociações do perído importadas com sucesso, usando Promise.\");\r\n         }))\r\n         .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    // Apaga a tabela de negociações na view e no banco.\r\n    apaga() {\r\n        this._service\r\n         .apaga()\r\n         .then(mensagem => {\r\n             this._listaNegociacoes.esvaziaTabela();\r\n             this._mensagem.texto = mensagem;\r\n             console.log(\"Negociações apagadas com sucesso.\");  \r\n         })\r\n         .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    //cria uma negociação.\r\n    _criaNegociacao() {\r\n        return new Negociacao (\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        );\r\n    }\r\n\r\n    // Limpa o formulário e o foco vai para a data, após adicionar uma negociação.\r\n    _limpaFormulario() {\r\n        this._inputData.value = \"\";\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n\r\n        this._inputData.focus();\r\n    }\r\n}\r\n\r\n\r\n\r\nlet negociacaoController = new NegociacaoController();\r\n\r\nexport function currentInstance() {\r\n    return negociacaoController;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n    # Anotações:\r\n\r\n    - spread operator -- São as reticências antes do _this_. indica que ele desmenbrará o array e posiciona na mesma ordem no construtor.\r\n\r\n    - item - indice % 2 -- ler item, menos indice, módulo dois.\r\n\r\n    - explicando a ordem das colunas: \r\n        lista.sort((a, b) => a - b);  \r\n        Se o valor retornado for 0 não há alteração a ser feita, se o valor retornado for positivo, 'b' deve vir antes de 'a', se o valor for negativo, 'a' deve vir antes de 'b'.\r\n*/"]}