{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDAO","Negociacao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","negociacao","getConnection","connection","DAO","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["// NegoviacaoService.js\r\n\r\n\r\n\r\nimport { HttpService } from \"./HttpService\";\r\nimport { ConnectionFactory } from \"./ConnectionFactory\";\r\n\r\nimport { NegociacaoDAO } from \"../DAO/NegociacaoDAO\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\n\r\n\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n\r\n\r\n    // Obtêm as negociações da semana.\r\n    obterNegociacoesDaSemana() {\r\n        \r\n            return this._http\r\n             .get(\"negociacoes/semana\")\r\n             .then(negociacoes => {\r\n                console.log(negociacoes);\r\n                return negociacoes.map(objeto => new Negociacao(\r\n                    new Date(objeto.data), \r\n                    objeto.quantidade, \r\n                    objeto.valor\r\n                ));\r\n             })\r\n             .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"NÃO foi possivel obter as negociações da semana.\");\r\n             });\r\n    }\r\n\r\n    \r\n    // Obtêm as negociações da 'semana anterior'.\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        \r\n            return this._http\r\n             .get(\"negociacoes/anterior\")\r\n             .then(negociacoes => {\r\n\r\n                console.log(negociacoes);\r\n\r\n                return negociacoes.map(objeto => new Negociacao(\r\n                    new Date(objeto.data), \r\n                    objeto.quantidade, \r\n                    objeto.valor\r\n                ));\r\n             })\r\n             .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"NÃO foi possivel obeter as negociações da semana anterior.\");\r\n             });\r\n        }\r\n        \r\n        // Obtêm as negociações da 'semana Retrasada'.\r\n        obterNegociacoesDaSemanaRetrasada() {\r\n                \r\n            return this._http\r\n             .get(\"negociacoes/retrasada\")\r\n             .then(negociacoes => {\r\n                console.log(negociacoes);\r\n\r\n                return negociacoes.map(objeto => new Negociacao(\r\n                    new Date(objeto.data), \r\n                    objeto.quantidade, \r\n                    objeto.valor\r\n                ));\r\n             })\r\n             .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"NÃO foi possivel obter as negociações da semana retrasada.\");\r\n             });\r\n        }\r\n\r\n        // Fleta as negociações de uma forma linear e chamada na 'importaNegociacoes'.\r\n        obterNegociacoes() {\r\n\r\n            return Promise.all([  \r\n                this.obterNegociacoesDaSemana(),\r\n                this.obterNegociacoesDaSemanaAnterior(),\r\n                this.obterNegociacoesDaSemanaRetrasada()])\r\n             .then(periodos => {\r\n                let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo), []);\r\n                return negociacoes;\r\n})\r\n             .catch(erro => { \r\n                throw new Error(erro);\r\n            });\r\n        }\r\n\r\n        // cadastra uma nova negociação e adiciona no 'NegociacaoController'.\r\n        cadastra(negociacao) {\r\n\r\n            return ConnectionFactory\r\n             .getConnection()\r\n             .then(connection => new NegociacaoDAO(connection))\r\n             .then(DAO => DAO.adiciona(negociacao))\r\n             .then(() => \"Negociação adicionada com sucesso.\")\r\n\r\n             .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error(\"Não foi possível adicionar uma negociação.\")\r\n             });\r\n        }\r\n\r\n        lista() {\r\n\r\n            return ConnectionFactory\r\n             .getConnection()\r\n             .then(connection => new NegociacaoDAO(connection))\r\n             .then(DAO => DAO.listaTodos()) // Lista todos os dados di IndexedDB.\r\n\r\n             .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error(\"Não foi possível obter as negociações.\")\r\n             });\r\n        }\r\n\r\n        // Apaga uma lista de negociação.\r\n        apaga() {\r\n            \r\n            return ConnectionFactory\r\n             .getConnection()\r\n             .then(connection => new NegociacaoDAO  (connection))\r\n             .then(DAO => DAO.apagaTodos())\r\n             .then(() => \"Negociações apagadas com sucesso.\")\r\n\r\n             .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error(\"Não foi possível apagar as negociações.\");\r\n             });\r\n        }\r\n\r\n        // Importa negociações.\r\n        importa(listaAtual) {\r\n\r\n            return this.obterNegociacoes()\r\n             .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        negociacao.isEquals(negociacaoExistente))\r\n                )\r\n             )\r\n             .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error(\"Não foi possível importar as negociações.\");\r\n             });\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    \r\n/*\r\n---------------------------------------------------------------------------------------------\r\n----------------------------------------------------------------------------------------------\r\n\r\n\r\n    # Anotações:\r\n\r\n    - Endereços do servidor -- 'negociacoes/semana', 'negociacoes/anterior', 'negociacoes/retrasada'\r\n\r\n\r\n---------------------------------------------------------------------------------------------\r\n----------------------------------------------------------------------------------------------\r\n*/"]}